{"version":3,"file":"index.js","mappings":"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;;AAErC;AACA,QAAQ,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,4BAA4B,gEAAa;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;ACzCc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM,cAAc,kDAAM;;AAE1C;AACA;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7C1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtvN8C;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;;AAEA,0CAA0C,8DAAmB;AAC7D,gBAAgB,8DAAmB;;AAEnC;;AAEA;AACA;;AAEA;AACA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;ACjDsB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,gEAAa;AACtB;;AAEA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;ACnCgE;AAClC;AACP;AACN;;AAE7C;AACA,QAAQ,gCAAgC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA,0BAA0B,0DAAU;AACpC,4BAA4B,0DAAU;;AAEtC;AACA,uBAAuB,wGAA+B;AACtD;AACA,yBAAyB,wGAA+B;;AAExD;AACA;AACA;AACA,0DAA0D,4DAAiB;AAC3E;;AAEA;AACA,iEAAe,wBAAwB,EAAC;;;;;;;;;;;;;;;;;AC9DkB;;AAE1D;AACA,QAAQ,kCAAkC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iEAAe,0BAA0B,EAAC;;;;;;;;;;;;;;;;;AC1CgB;;AAE1D;AACA,QAAQ,iCAAiC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,yBAAyB,EAAC;;;;;;;;;;;;;;;;;;ACtCiB;AACe;;AAEzE;AACA,QAAQ,wBAAwB;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,sFAAwB;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B;AACA;;AAEA;AACA,iEAAe,gBAAgB,EAAC;;;;;;;;;;;;;;;;;;;;AC3G0B;AACb;AACgC;AACpB;;AAEzD;AACA,QAAQ,0BAA0B;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uDAAuD,sEAAc;AACrE;AACA;AACA;AACA;AACA;;AAEA,eAAe,0DAAU;AACzB;AACA,IAAI,0FAA0B;AAC9B;;AAEA;;AAEA;AACA;;AAEA;;AAEA,2BAA2B,0DAAU;;AAErC;AACA,IAAI,sEAAgB;AACpB;AACA,IAAI,0DAAU;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,kBAAkB,EAAC;;;;;;;;;;;;;;;;;;AC5D8B;AACP;;AAEzD;AACA,QAAQ,yBAAyB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,eAAe,sEAAgB;AAC/B,SAAS,4EAAiB;AAC1B;;AAEA;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;;;;;ACrDyB;AACb;AAC8B;;AAE3E;AACA,QAAQ,yBAAyB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0DAAU;;AAEzB;AACA;AACA,wBAAwB,wFAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAU;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;;;AC9DI;;AAErC;AACA,QAAQ,gBAAgB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;;AAEA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;ACnCa;;AAErC;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;ACrCe;AACI;AACR;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB,UAAU,sDAAQ,sBAAsB,0DAAU;AAClD;;AAEA;AACA,iEAAe,gBAAgB,EAAC;;;;;;;;;;;;;;;;;;AC5B0B;AACb;;AAE7C;AACA,QAAQ,iBAAiB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kCAAkC,sEAAc;AAChD;AACA;AACA;AACA;AACA,UAAU,0DAAU,iBAAiB,0DAAU;AAC/C;;AAEA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;AC9CiC;AACX;;AAE/C;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,qCAAqC,sEAAc;AACnD;AACA;AACA;AACA;AACA;AACA,KAAK,4DAAW,2BAA2B,4DAAW;AACtD;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;ACnDyB;AACF;AACJ;;AAE7C;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE;AACA;AACO;AACP,SAAS,0DAAU;AACnB,IAAI,gEAAa;AACjB,IAAI,8DAAY;AAChB;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;AC1CyB;AACF;AACN;;AAE3C;AACA,QAAQ,eAAe;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,wDAAS;AAClB,IAAI,gEAAa;AACjB,IAAI,8DAAY;AAChB;AACA;;AAEA;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;ACnCgB;AACU;AACN;;AAE3C;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,wDAAS;AAClB;AACA,IAAI,oDAAO,CAAC,8DAAY;AACxB;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;ACjCF;AAC2B;AACd;;AAErC;AACA,QAAQ,gBAAgB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACO;AACP,4BAA4B,gEAAa;;AAEzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,mBAAmB,kDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,kDAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE;AAC1D;AACA,QAAQ,EAAE,sBAAsB,EAAE,wBAAwB,EAAE;AAC5D,kCAAkC,EAAE,UAAU,EAAE;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,EAAE,SAAS;AACzB;AACA,QAAQ,OAAO,EAAE,SAAS;AAC1B;AACA,QAAQ;AACR;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,6DAAkB,aAAa,+DAAoB;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,6DAAkB,aAAa,+DAAoB;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;ACrSa;;AAErC;AACA,QAAQ,kBAAkB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,kDAAM;AACtB;AACA;AACA;;AAEA;AACA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;ACnCmC;AACxB;;AAErC;AACA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACO;AACP,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,kDAAM;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;ACrDwB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,SAAS,gEAAa;AACtB;;AAEA;AACA,iEAAe,MAAM,EAAC;;;;;;;UC9CtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNoB;AACC;AACmB;AACI;AACF;AACG;AAE7C1F,yDAAY,CAAC,CAAC;AACdmE,qDAAS,CAAC,CAAC;AACXiB,yDAAY,CAAC,CAAC;AACdsC,uDAAM,CAAC,CAAC,C","sources":["webpack://todo/./src/js/addTask.js","webpack://todo/./src/js/checkDate.js","webpack://todo/./src/js/currentPage.js","webpack://todo/./src/js/filter.js","webpack://todo/./src/js/images.js","webpack://todo/./src/js/relativeDate.js","webpack://todo/./src/js/sidebar.js","webpack://todo/./src/js/taskManager.js","webpack://todo/./node_modules/animate.css/animate.css","webpack://todo/./src/style.css","webpack://todo/./node_modules/date-fns/_lib/defaultOptions.js","webpack://todo/./node_modules/date-fns/_lib/getRoundingMethod.js","webpack://todo/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack://todo/./node_modules/date-fns/_lib/normalizeDates.js","webpack://todo/./node_modules/date-fns/addDays.js","webpack://todo/./node_modules/date-fns/compareAsc.js","webpack://todo/./node_modules/date-fns/constants.js","webpack://todo/./node_modules/date-fns/constructFrom.js","webpack://todo/./node_modules/date-fns/constructNow.js","webpack://todo/./node_modules/date-fns/differenceInCalendarDays.js","webpack://todo/./node_modules/date-fns/differenceInCalendarMonths.js","webpack://todo/./node_modules/date-fns/differenceInCalendarYears.js","webpack://todo/./node_modules/date-fns/differenceInDays.js","webpack://todo/./node_modules/date-fns/differenceInMonths.js","webpack://todo/./node_modules/date-fns/differenceInWeeks.js","webpack://todo/./node_modules/date-fns/differenceInYears.js","webpack://todo/./node_modules/date-fns/endOfDay.js","webpack://todo/./node_modules/date-fns/endOfMonth.js","webpack://todo/./node_modules/date-fns/isLastDayOfMonth.js","webpack://todo/./node_modules/date-fns/isSameDay.js","webpack://todo/./node_modules/date-fns/isSameWeek.js","webpack://todo/./node_modules/date-fns/isThisWeek.js","webpack://todo/./node_modules/date-fns/isToday.js","webpack://todo/./node_modules/date-fns/isTomorrow.js","webpack://todo/./node_modules/date-fns/parseISO.js","webpack://todo/./node_modules/date-fns/startOfDay.js","webpack://todo/./node_modules/date-fns/startOfWeek.js","webpack://todo/./node_modules/date-fns/toDate.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/index.js"],"sourcesContent":["\r\nimport { addTask } from \"./taskManager\"\r\n\r\nconst openTaskButton = document.getElementById(\"addTaskButton\")\r\nconst addTaskButton = document.getElementById(\"addTaskModalButton\")\r\nconst smokeScreen = document.getElementById(\"modalSmokeScreen\")\r\n\r\nconst modal = document.getElementById(\"addTaskModal\")\r\nconst title = document.getElementById(\"taskTitle\")\r\nconst description = document.getElementById(\"taskDescription\")\r\nconst priority = document.getElementById(\"prioritySelect\")\r\nconst date = document.getElementById(\"dueDateSelect\")\r\nconst project = document.getElementById(\"projectsSelect\")\r\n\r\nDate.prototype.toDateInputValue = (function() {\r\n  var local = new Date(this);\r\n  local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n  return local.toJSON().slice(0,10);\r\n});\r\n\r\nvar form = document.getElementById(\"addTaskForm\");\r\nfunction handleForm(event) { event.preventDefault(); } \r\nform.addEventListener('submit', handleForm);\r\n\r\nform.addEventListener(\"submit\", function (event) {\r\n  if (!form.checkValidity()) {\r\n      event.preventDefault();\r\n      modal.classList.remove(\"hidden\"); // Ensure modal is visible\r\n      title.focus(); // Focus on the invalid field\r\n  }\r\n});\r\n\r\nfunction hideModal(){\r\n  modal.classList.add(\"hidden\")\r\n}\r\n\r\nfunction getTaskData(){\r\n \r\n    \r\n    const title = document.getElementById(\"taskTitle\").value\r\n    const description = document.getElementById(\"taskDescription\").value\r\n    const priority = document.getElementById(\"prioritySelect\").value\r\n    const date = document.getElementById(\"dueDateSelect\").value\r\n    const project = document.getElementById(\"projectsSelect\").value\r\n\r\n    if(title)\r\n    {\r\n      addTask(title, description, date, priority, project);\r\n      hideModal();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function addTaskModal()\r\n{\r\n    smokeScreen.addEventListener(\"click\", function() {\r\n        modal.classList.toggle(\"hidden\")\r\n      });\r\n\r\n      openTaskButton.addEventListener(\"click\", function() {\r\n        document.getElementById('dueDateSelect').value = new Date().toDateInputValue();\r\n         \r\n       document.getElementById(\"taskTitle\").value=\"\";\r\n       document.getElementById(\"taskDescription\").value='';\r\n      modal.classList.remove(\"hidden\")\r\n\r\n      });\r\n\r\n      addTaskButton.addEventListener(\"click\", function() {\r\n       getTaskData()\r\n     \r\n      });\r\n}\r\n\r\n","import { compareAsc, parseISO ,isThisWeek ,startOfDay, differenceInDays, differenceInWeeks, differenceInMonths, differenceInYears, isToday, isTomorrow } from \"date-fns\";\r\n\r\n\r\n\r\n\r\n\r\nexport function checkFilterDate(date, filterDate){\r\n    const targetDate = startOfDay(date)\r\n    var currentFilter \r\n\r\n    if (isToday(targetDate)) currentFilter =  \"Today\";\r\n    else if (isTomorrow(targetDate)) currentFilter = \"Tomorrow\";\r\n    else if (isThisWeek(targetDate)) currentFilter = \"Week\";\r\n    else currentFilter = \"Planned\" \r\n\r\n    if (filterDate == currentFilter)\r\n        return true;\r\n    else\r\n        return false;\r\n}","import { currentFilter, tasks } from \"./taskManager\"\r\nimport { checkFilterDate } from \"./checkDate\";\r\n\r\nconst titlePage = document.getElementById(\"titlePage\")\r\n\r\nconst PendingCount = document.getElementById(\"PendingCountPage\")\r\nconst CompletedCount = document.getElementById(\"CompletedCountPage\")\r\n\r\n\r\n\r\nconst TodayCountElement  = document.getElementById(\"TodayCount\")\r\nconst TomorrowCountElement  = document.getElementById(\"TomorrowCount\")\r\nconst WeekCountElement  = document.getElementById(\"WeekCount\")\r\nconst PlannedCountElement  = document.getElementById(\"PlannedCount\")\r\nconst CompletedCountElement  = document.getElementById(\"CompletedCount\")\r\n\r\nexport function statsPage(formatedTasks){\r\n    var PendingCountNum = 0;\r\n    var CompletedCountNum = 0;\r\n    formatedTasks.forEach(task =>  \r\n    {\r\n        if(task.Completed)\r\n        {\r\n            CompletedCountNum++;\r\n        }\r\n        else\r\n        {\r\n            PendingCountNum++;\r\n        }\r\n            \r\n    }\r\n    \r\n    )\r\n    console.log(\"pending \")\r\n    console.log(PendingCountNum)\r\n    console.log(\"Completed \")\r\n    console.log(CompletedCountNum)\r\n    PendingCount.innerHTML=PendingCountNum;\r\n    \r\n    CompletedCount.innerHTML=CompletedCountNum;\r\n}\r\n\r\nexport function statsSidebar(){\r\n    const counts = {\r\n        today: 0,\r\n        tomorrow: 0,\r\n        week: 0,\r\n        planned: 0,\r\n        completed: 0\r\n    };\r\n\r\n\r\n    if(currentFilter==\"Week\") \r\n        titlePage.innerHTML = \"This Week\";\r\n    else\r\n         titlePage.innerHTML = currentFilter;\r\n\r\n    \r\n   tasks.forEach(task => \r\n    {\r\n        console.log(task.Completed)\r\n        if (task.Completed) counts.completed++;\r\n        else{\r\n            if (!task.Completed) counts.planned++;\r\n        \r\n            if (checkFilterDate(task.date, \"Today\")) counts.today++;\r\n            if (checkFilterDate(task.date, \"Tomorrow\")) counts.tomorrow++;\r\n            if (checkFilterDate(task.date, \"Week\")) counts.week++;\r\n        }\r\n     \r\n    })\r\n\r\n\r\n    TodayCountElement.innerHTML=counts.today;\r\n    TomorrowCountElement.innerHTML=counts.tomorrow;\r\n    WeekCountElement.innerHTML=counts.week;\r\n    PlannedCountElement.innerHTML=counts.planned;\r\n    CompletedCountElement.innerHTML=counts.completed;\r\n\r\n    PendingCount.innerHTML=counts.planned;\r\n    CompletedCount.innerHTML=counts.completed;\r\n}\r\n","import { checkFilterDate } from \"./checkDate\";\r\nimport { compareAsc, parseISO ,isThisWeek ,startOfDay, differenceInDays, differenceInWeeks, differenceInMonths, differenceInYears, isToday, isTomorrow } from \"date-fns\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction sortTasksByDate(tasks) {\r\n    tasks.sort((a, b) => compareAsc(parseISO(a.date), parseISO(b.date)));\r\n}\r\n\r\nfunction filter(task, filterTask){\r\n  \r\n  \r\n    if(filterTask)\r\n    {   \r\n       \r\n         switch (filterTask) {\r\n            case \"Completed\":\r\n                if (task.Completed == true)\r\n                    return true;\r\n            break;\r\n\r\n\r\n            case \"Today\":\r\n            case \"Tomorrow\":\r\n            case \"Week\":\r\n                if (checkFilterDate(task.date, filterTask))\r\n                {\r\n                    if (task.Completed == false)\r\n                        return true;\r\n                }\r\n                   \r\n            break;\r\n        \r\n            case \"Planned\":\r\n                if (task.Completed == false)\r\n                    return true;\r\n            break;\r\n\r\n            default:\r\n                return false;\r\n        }\r\n        return false;\r\n    }\r\n    else\r\n    if (task.Completed == false)\r\n        return true;\r\n}\r\n\r\nexport function formatTasks(tasks, filterTask)\r\n{\r\n   \r\n\r\n\r\n\r\n    console.log(filterTask)\r\n    var formatedTasks = [];\r\n\r\n\r\n   // var filterTask = \"Today\"\r\n\r\n   sortTasksByDate(tasks)\r\n\r\n   tasks.forEach(task => \r\n    {\r\n           \r\n        if(filter(task, filterTask)){\r\n      \r\n                            formatedTasks.push(task);\r\n             \r\n                    \r\n              \r\n            }\r\n    })\r\n\r\n    return formatedTasks\r\n}\r\n","import icon from \"../pictures/icon.svg\"\r\nimport sidebar from \"../pictures/sidebar.svg\"\r\nimport Today from \"../pictures/Today.svg\"\r\nimport Week from \"../pictures/Week.svg\"\r\nimport tommorow from \"../pictures/tommorow.svg\"\r\nimport Planned from \"../pictures/Planned.svg\"\r\nimport Completed from \"../pictures/Completed.svg\"\r\nimport project from \"../pictures/project.svg\"\r\nimport add from \"../pictures/add.svg\"\r\nimport priority from \"../pictures/priority.svg\"\r\n\r\n\r\nfunction createImageDiv(element, id )\r\n{\r\n    const tempImg = new Image();\r\n    tempImg.src=  element\r\n    tempImg.classList.add(\"iconSvg\")\r\n    var parentElement = document.getElementById(id)\r\n    parentElement.append(tempImg)\r\n\r\n}\r\n\r\nfunction createMultipleImageDiv(element, id)\r\n{\r\n \r\n\r\n        document.querySelectorAll(id).forEach(\r\n            el => {    \r\n           \r\n                const tempImg = new Image();\r\n                tempImg.src = element;\r\n                tempImg.classList.add(\"iconSvg\")\r\n                el.append(tempImg)\r\n           \r\n            }\r\n        );\r\n    \r\n}\r\n\r\nexport function setImages(){\r\n    \r\n\r\n    createImageDiv(icon, \"icon\")\r\n    createImageDiv( sidebar, \"sidebarIcon\")\r\n    createImageDiv(sidebar, \"sidebarIcon2\")\r\n    createImageDiv(Today, \"TodayImg\")\r\n    createImageDiv(tommorow, \"tommorowImg\")\r\n    createImageDiv(Week, \"WeekImg\")\r\n    createImageDiv(Planned, \"PlannedImg\")\r\n    createImageDiv(Completed, \"CompletedImg\");\r\n    createImageDiv(add, \"addImg\");\r\n\r\n    createImageDiv(priority, \"flagImg\");\r\n    createImageDiv(Planned, \"calendarImg\");\r\n    createImageDiv(project, \"projectModalImg\");\r\n    window.onload= createMultipleImageDiv(project,\".projectImg\");\r\n}","\r\n\r\nimport { compareAsc, parseISO ,isThisWeek ,startOfDay, differenceInDays, differenceInWeeks, differenceInMonths, differenceInYears, isToday, isTomorrow } from \"date-fns\";\r\n\r\n\r\nexport function getRelativeDate(date) {\r\n  const Today = startOfDay(new Date()); // Normalize Today's date to midnight\r\n  const targetDate = startOfDay(date); // Normalize the target date to midnight\r\n\r\n  if (isToday(targetDate)) return \"Today\";\r\n  if (isTomorrow(targetDate)) return \"Tomorrow\";\r\n\r\n  const daysDiff = differenceInDays(targetDate, Today);\r\n  const WeeksDiff = differenceInWeeks(targetDate, Today);\r\n  const monthsDiff = differenceInMonths(targetDate, Today);\r\n  const yearsDiff = differenceInYears(targetDate, Today);\r\n   \r\n\r\n    if (daysDiff < 7) return `In ${daysDiff} days`; // \"In 3 days\"\r\n    if (WeeksDiff === 1) return \"Next Week\"; // \"Next Week\"\r\n    if (WeeksDiff > 1 && monthsDiff < 1) return `In ${WeeksDiff} Weeks`; // \"In 2 Weeks\"\r\n    if (monthsDiff === 1) return \"Next month\"; // \"Next month\"\r\n    if (monthsDiff > 1 && monthsDiff < 5) return `In ${monthsDiff} months`; // \"In 4 months\"\r\n    if (yearsDiff === 1) return \"In a year\"; // \"In a year\"\r\n    return `In ${yearsDiff} years`; // \"In 4 years\"\r\n}","const sidebar = document.getElementById(\"sidebar\");\r\nconst main = document.getElementById(\"main\");\r\nconst sidebarToggleButton2 = document.getElementById('sidebarIcon2')\r\nconst sidebarToggleButton = document.getElementById('sidebarIcon')\r\nconst smokeScreen = document.getElementById('smokeScreen')\r\nvar windowSize = window.matchMedia(\"(max-width: 780px)\")\r\n\r\n\r\nfunction responsiveSidebar(windowSize)\r\n{\r\n    if (windowSize.matches){\r\n        main.classList.add(\"fullscreen\")\r\n        sidebar.classList.add(\"hidden\")\r\n   \r\n        if (sidebarToggleButton.classList.contains(\"hiddenBtn\"))\r\n        {\r\n            sidebarToggleButton.classList.remove(\"hiddenBtn\")\r\n            sidebarToggleButton2.classList.add(\"hiddenBtn\")\r\n        }\r\n      \r\n    }\r\n    else{\r\n        main.classList.remove(\"fullscreen\")\r\n        sidebar.classList.remove(\"hidden\")\r\n        smokeScreen.classList.add(\"hidden\")\r\n        if (sidebarToggleButton2.classList.contains(\"hiddenBtn\"))\r\n            {\r\n                sidebarToggleButton2.classList.remove(\"hiddenBtn\")\r\n                sidebarToggleButton.classList.add(\"hiddenBtn\")\r\n            }\r\n          \r\n    }\r\n\r\n}\r\n\r\nfunction toggleSidebar(){\r\n\r\n        sidebar.classList.toggle(\"hidden\")\r\n        main.classList.toggle(\"fullscreen\")\r\n        sidebarToggleButton2.classList.toggle(\"hiddenBtn\")\r\n        sidebarToggleButton.classList.toggle(\"hiddenBtn\")    \r\n        if (windowSize.matches){\r\n            if (sidebarToggleButton2.classList.contains(\"hiddenBtn\"))\r\n            smokeScreen.classList.add(\"hidden\")\r\n            else\r\n            smokeScreen.classList.remove(\"hidden\")\r\n        }\r\n}\r\n\r\n\r\nexport function sidebarLogic(){\r\n    sidebarToggleButton2.addEventListener(\"click\", function() {\r\n        toggleSidebar()\r\n      });\r\n\r\n      sidebarToggleButton.addEventListener(\"click\", function() {\r\n        toggleSidebar()\r\n      });\r\n\r\n      smokeScreen.addEventListener(\"click\", function() {\r\n        toggleSidebar()\r\n      });\r\n\r\n      windowSize.addEventListener(\"change\", function() {\r\n    \r\n        responsiveSidebar(windowSize);\r\n      });\r\n}\r\n\r\n\r\n","\r\nimport { getRelativeDate } from \"./relativeDate\";\r\nimport { formatTasks } from \"./filter\";\r\nimport { statsSidebar, statsPage } from \"./currentPage\"\r\n\r\nconst taskContainer  = document.getElementById(\"taskContainer\")\r\n\r\nconst TodayBtn  = document.getElementById(\"Today\")\r\nconst tommorrowBtn  = document.getElementById(\"Tomorrow\")\r\nconst WeekBtn  = document.getElementById(\"Week\")\r\nconst PlannedBtn  = document.getElementById(\"Planned\")\r\nconst CompletedBtn  = document.getElementById(\"Completed\")\r\n\r\nexport var currentFilter= \"Today\";\r\n\r\n\r\nexport var tasks = [];\r\n\r\nfunction Task(title, details, date, priority, project,Completed) {\r\n\r\n    this.title = title;\r\n    this.details = details;\r\n    this.date = date;\r\n    this.priority = priority;\r\n    if (project)\r\n        this.project = project;\r\n    else\r\n        this.project=\"Default\"\r\n\r\n    if (Completed)\r\n        this.Completed = Completed;\r\n    else\r\n        this.Completed=false\r\n  }\r\n\r\n\r\n    function renderTask(task) {\r\n        const taskCard = document.createElement(\"div\");\r\n        const container = document.createElement(\"div\");\r\n        const inputCheckmark = document.createElement(\"input\");\r\n        const label = document.createElement(\"label\");\r\n        const spanCheckmark = document.createElement(\"span\");\r\n        const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        const polyline = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polyline\");\r\n        const taskTitle = document.createElement(\"span\");\r\n        const dueDate = document.createElement(\"div\");\r\n    \r\n        taskCard.classList.add(\"taskCard\");\r\n        container.classList.add(\"container\");\r\n        inputCheckmark.type = \"checkbox\";\r\n        inputCheckmark.classList.add(\"checkbox\");\r\n        inputCheckmark.id = `cbx-${task.title+task.date+(Math.random() * 10000)}`; // Assuming task.id is unique\r\n    \r\n        label.classList.add(\"cbx\");\r\n        label.setAttribute(\"for\", inputCheckmark.id);\r\n        taskTitle.classList.add(\"taskTitle\");\r\n        dueDate.classList.add(\"dueDate\");\r\n    \r\n        // Set the task title and due date\r\n        taskTitle.textContent = task.title;\r\n        dueDate.textContent = getRelativeDate(task.date);\r\n    \r\n        // Create the SVG checkmark\r\n        svg.setAttribute(\"width\", \"12px\");\r\n        svg.setAttribute(\"height\", \"9px\");\r\n        svg.setAttribute(\"viewBox\", \"0 0 12 9\");\r\n        polyline.setAttribute(\"points\", \"1 5 4 8 11 1\");\r\n        svg.appendChild(polyline);\r\n    \r\n        // Append the SVG to the spanCheckmark\r\n        spanCheckmark.appendChild(svg);\r\n    \r\n        // Append all the elements together\r\n        label.appendChild(spanCheckmark);\r\n        label.appendChild(taskTitle);\r\n        container.appendChild(inputCheckmark);\r\n        container.appendChild(label);\r\n        taskCard.appendChild(container);\r\n        taskCard.appendChild(dueDate);\r\n        \r\n        taskContainer.appendChild(taskCard); // Assuming taskContainer exists\r\n    \r\n        // Check if the task is Completed, and set the checkbox state\r\n        inputCheckmark.checked = task.Completed;\r\n    \r\n        // Add event listener to update task completion on checkbox click\r\n        inputCheckmark.addEventListener(\"change\", function() {\r\n            task.Completed = this.checked; // Toggle completion\r\n    \r\n            // Add animation\r\n            taskCard.classList.add('animate__animated', \"animate__fadeOutRight\");\r\n    \r\n            taskCard.addEventListener('animationend', () => {\r\n                renderAllTasks(currentFilter); // Update task list\r\n            });\r\n        });\r\n    }\r\n    \r\n\r\n\r\nexport function addTask(title, description, date, priority, project){\r\n    tasks.push(new Task (title, description, date, priority, project)) \r\n\r\n    renderAllTasks(currentFilter)\r\n}\r\n\r\nexport function getAllTasks(){\r\n    return tasks;\r\n}\r\n\r\nfunction clearTasks(){\r\n    taskContainer.innerHTML = '';\r\n}\r\n\r\n\r\n\r\nfunction renderAllTasks(filterTask){\r\n\r\n    clearTasks()\r\n    statsSidebar();\r\n    var formatedTasks = formatTasks(tasks,filterTask)\r\n   console.log(filterTask)\r\n    formatedTasks.forEach(task =>  renderTask(task)  )\r\n    statsPage(formatedTasks);\r\n}\r\n\r\n\r\nfunction buttonSelectedClass(button) {\r\n\r\n   \r\n    // Get all elements with the 'selected' class\r\n    var oldButtons = document.getElementsByClassName(\"selected\");\r\n\r\n    // Ensure there are elements before looping\r\n    if (oldButtons.length > 0) {\r\n        Array.from(oldButtons).forEach(el => el.classList.remove(\"selected\"));\r\n    }\r\n\r\n    // Add 'selected' class to the clicked button\r\n    button.classList.add(\"selected\");\r\n}\r\n\r\n\r\n\r\nexport function render(){\r\n    tasks.push(new Task (\"do\", \"date\",\"2025-03-21\",\"high\",\"Default\"))\r\n    tasks.push(new Task (\"do\", \"date\",\"2025-03-22\",\"high\",\"Default\"))\r\n    tasks.push(new Task (\"do\", \"date\",\"2025-03-20\",\"high\",\"Default\"))\r\n    tasks.push(new Task (\"do\", \"date\",\"2025-03-21\",\"high\",\"Default\"))\r\n\r\n\r\n    renderAllTasks()\r\n    TodayBtn.addEventListener(\"click\", function() {  currentFilter=\"Today\"; renderAllTasks(\"Today\" ); buttonSelectedClass(TodayBtn)})\r\n    tommorrowBtn.addEventListener(\"click\", function() {  currentFilter=\"Tomorrow\"; renderAllTasks(\"Tomorrow\"); buttonSelectedClass(tommorrowBtn) })\r\n    WeekBtn.addEventListener(\"click\", function() {  currentFilter=\"Week\"; renderAllTasks(\"Week\" ); buttonSelectedClass(WeekBtn)})\r\n    PlannedBtn.addEventListener(\"click\", function() {  currentFilter=\"Planned\"; renderAllTasks(\"Planned\" ); buttonSelectedClass(PlannedBtn)})\r\n    CompletedBtn.addEventListener(\"click\", function() {  currentFilter=\"Completed\"; renderAllTasks(\"Completed\" ); buttonSelectedClass(CompletedBtn)})\r\n    \r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateArg<DateType>,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarYears} function options.\n */\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * );\n * //=> 2\n */\nexport function differenceInCalendarYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() - earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\n\n/**\n * The {@link differenceInDays} function options.\n */\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareLocalAsc(laterDate_, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarDays(laterDate_, earlierDate_),\n  );\n\n  laterDate_.setDate(laterDate_.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(laterDate_, earlierDate_) === -sign,\n  );\n\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(laterDate, earlierDate) {\n  const diff =\n    laterDate.getFullYear() - earlierDate.getFullYear() ||\n    laterDate.getMonth() - earlierDate.getMonth() ||\n    laterDate.getDate() - earlierDate.getDate() ||\n    laterDate.getHours() - earlierDate.getHours() ||\n    laterDate.getMinutes() - earlierDate.getMinutes() ||\n    laterDate.getSeconds() - earlierDate.getSeconds() ||\n    laterDate.getMilliseconds() - earlierDate.getMilliseconds();\n\n  if (diff < 0) return -1;\n  if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInDays } from \"./differenceInDays.js\";\n\n/**\n * The {@link differenceInWeeks} function options.\n */\n\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * @example\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\nexport function differenceInWeeks(laterDate, earlierDate, options) {\n  const diff = differenceInDays(laterDate, earlierDate, options) / 7;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInWeeks;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.js\";\n\n/**\n * The {@link differenceInYears} function options.\n */\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  // -1 if the left date is earlier than the right date\n  // 2023-12-31 - 2024-01-01 = -1\n  const sign = compareAsc(laterDate_, earlierDate_);\n\n  // First calculate the difference in calendar years\n  // 2024-01-01 - 2023-12-31 = 1 year\n  const diff = Math.abs(differenceInCalendarYears(laterDate_, earlierDate_));\n\n  // Now we need to calculate if the difference is full. To do that we set\n  // both dates to the same year and check if the both date's month and day\n  // form a full year.\n  laterDate_.setFullYear(1584);\n  earlierDate_.setFullYear(1584);\n\n  // For it to be true, when the later date is indeed later than the earlier date\n  // (2026-02-01 - 2023-12-10 = 3 years), the difference is full if\n  // the normalized later date is also later than the normalized earlier date.\n  // In our example, 1584-02-01 is earlier than 1584-12-10, so the difference\n  // is partial, hence we need to subtract 1 from the difference 3 - 1 = 2.\n  const partial = compareAsc(laterDate_, earlierDate_) === -sign;\n\n  const result = sign * (diff - +partial);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport function isSameWeek(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    +startOfWeek(laterDate_, options) === +startOfWeek(earlierDate_, options)\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameWeek } from \"./isSameWeek.js\";\n\n/**\n * The {@link isThisWeek} function options.\n */\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param date - The date to check\n * @param options - The object with options\n *\n * @returns The date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nexport function isThisWeek(date, options) {\n  return isSameWeek(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n    options,\n  );\n}\n\n// Fallback for modularized imports:\nexport default isThisWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameDay } from \"./isSameDay.js\";\n\n/**\n * The {@link isToday} function options.\n */\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport function isToday(date, options) {\n  return isSameDay(\n    constructFrom(options?.in || date, date),\n    constructNow(options?.in || date),\n  );\n}\n\n// Fallback for modularized imports:\nexport default isToday;\n","import { addDays } from \"./addDays.js\";\nimport { constructNow } from \"./constructNow.js\";\nimport { isSameDay } from \"./isSameDay.js\";\n\n/**\n * The {@link isTomorrow} function options.\n */\n\n/**\n * @name isTomorrow\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n * @pure false\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * const result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nexport function isTomorrow(date, options) {\n  return isSameDay(\n    date,\n    addDays(constructNow(options?.in || date), 1),\n    options,\n  );\n}\n\n// Fallback for modularized imports:\nexport default isTomorrow;\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"animate.css\"\r\nimport './style.css';\r\nimport { setImages } from './js/images';\r\nimport { sidebarLogic } from './js/sidebar';\r\nimport { render } from './js/taskManager';\r\nimport { addTaskModal }  from './js/addTask';\r\n\r\naddTaskModal()\r\nsetImages();\r\nsidebarLogic();\r\nrender()\r\n"],"names":["addTask","openTaskButton","document","getElementById","addTaskButton","smokeScreen","modal","title","description","priority","date","project","Date","prototype","toDateInputValue","local","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","form","handleForm","event","preventDefault","addEventListener","checkValidity","classList","remove","focus","hideModal","add","getTaskData","value","addTaskModal","toggle","compareAsc","parseISO","isThisWeek","startOfDay","differenceInDays","differenceInWeeks","differenceInMonths","differenceInYears","isToday","isTomorrow","checkFilterDate","filterDate","targetDate","currentFilter","tasks","titlePage","PendingCount","CompletedCount","TodayCountElement","TomorrowCountElement","WeekCountElement","PlannedCountElement","CompletedCountElement","statsPage","formatedTasks","PendingCountNum","CompletedCountNum","forEach","task","Completed","console","log","innerHTML","statsSidebar","counts","today","tomorrow","week","planned","completed","sortTasksByDate","sort","a","b","filter","filterTask","formatTasks","push","icon","sidebar","Today","Week","tommorow","Planned","createImageDiv","element","id","tempImg","Image","src","parentElement","append","createMultipleImageDiv","querySelectorAll","el","setImages","window","onload","getRelativeDate","daysDiff","WeeksDiff","monthsDiff","yearsDiff","main","sidebarToggleButton2","sidebarToggleButton","windowSize","matchMedia","responsiveSidebar","matches","contains","toggleSidebar","sidebarLogic","taskContainer","TodayBtn","tommorrowBtn","WeekBtn","PlannedBtn","CompletedBtn","Task","details","renderTask","taskCard","createElement","container","inputCheckmark","label","spanCheckmark","svg","createElementNS","polyline","taskTitle","dueDate","type","Math","random","setAttribute","textContent","appendChild","checked","renderAllTasks","getAllTasks","clearTasks","buttonSelectedClass","button","oldButtons","getElementsByClassName","length","Array","from","render"],"sourceRoot":""}